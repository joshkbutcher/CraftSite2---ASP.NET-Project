@using Microsoft.AspNetCore.Components.Web
@using CraftSite2.Models
@using CraftSite2.Services
@inject JsonFileProductsService ProductService

<div class="card-columns">
	<div class="row row-cols-1 row-cols-md-3 g-4">
		@foreach (var product in ProductService.GetProducts())
		{
			<div class="col">
				<div class="card">
					<div class="card-img" style="background-image: url('@product.Image');"></div>
					<div class="card-body">
						<h5 class="card-title">@product.Title</h5>
					</div>
				</div>
				<div class="card-footer">
					<small class="text-muted">
						<button class="btn btn-primary" @onclick="(e => SelectProduct(product.Id))"
						data-bs-toggle="modal" data-bs-target="#productModal">
							More Info
						</button>
					</small>
				</div>
			</div>
		}
	</div>
</div>

<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css">

@if (selectedProduct != null)
{
	<div class="modal fade" id="productModal" tabindex="-1" role="dialog" aria-labelledby="productTitle" aria-hidden="true">
		<div class="modal-dialog modal-dialog-centered" role="document">
			<div class="modal-content">
				<div class="modal-header">
					<h5 class="modal-title" id="productTitle">@selectedProduct.Title</h5>
					<button type="button" class="close" data-dismiss="modal" aria-label="Close">
						<span aria-hidden="true">&times;</span>
					</button>
				</div>
				<div class="modal-body">
					<div class="card">
						<div class="card-img" style="background-image: url('@selectedProduct.Image');">
						</div>
						<div class="card-body">
							<p class="card-text">@selectedProduct.Description</p>
						</div>
					</div>
				</div>
				<div class="modal-footer">
					@if(voteCount == 0) {
						<span>Be the first to rate this product!</span>
					}
					else
					{
						<span>@voteCount @voteLabel</span>
					}

					@for (int i = 1; i <= 5; i++)
					{
						var currentStar = i;
						if (i <= currentRating)
						{
							<span class="fa fa-star checked" @onclick="(e => SubmitRating(currentStar))"></span>
						}
						else
						{
							<span class="fa fa-star" @onclick="(e => SubmitRating(currentStar))"></span>

						}
					}
				</div>
			</div>
		</div>
	</div>
}


@code {
	Product selectedProduct;
	string selectedProductId;

	void SelectProduct(string id)
	{
		selectedProductId = id;
		// selectProduct = ProductService.GetProductById(selectedProductId);
		selectedProduct = ProductService.GetProducts().First(x => x.Id == id);
		GetCurrentRating();
	}

	int currentRating = 0;
	int voteCount = 0;
	string voteLabel;

	void GetCurrentRating()
	{
		voteLabel = voteCount == 1 ? "vote" : "votes";

		if (selectedProduct.Ratings == null) {
			currentRating = 0;
			voteCount = 0;
		}
		else
		{
			voteCount = selectedProduct.Ratings.Count();
			voteLabel = voteCount == 1 ? "Vote" : "Votes";
			currentRating = selectedProduct.Ratings.Sum() / voteCount;
		}

		System.Console.WriteLine($"Current rating for {selectedProduct.Id}: { currentRating}");
	}

	void SubmitRating(int rating)
	{
		System.Console.WriteLine($"Rating received for {selectedProduct.Id}: {rating}");
		ProductService.AddRating(selectedProduct.Id, rating);
		SelectProduct(selectedProduct.Id);
	}
}

